
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
          &kp ESC    &kp N1            &kp N2            &kp N3            &kp N4     &kp N5            &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)                   &kp N6         &kp N7      &kp N8             &kp N9          &kp N0   &kp BACKSLASH
          &kp TAB     &kp Q             &kp W             &kp E             &kp R      &kp T                       &kp LG(V)              &kp RG(F)                    &kp Y          &kp U       &kp I              &kp O           &kp P   &kp BACKSLASH
 &kp LEFT_CONTROL     &kp A             &kp S             &kp D             &kp F      &kp G                       &kp LG(C)                  &mo 2                    &mo 2                                         &mo 3           &mo 3       &kp LG(A)         &kp H            &kp J      &kp K    &kp L  &kp SEMI  &kp RETURN
        &kp LSHFT     &kp Z             &kp X             &kp C             &kp V      &kp B                           &none                  &none           &kp LEFT_SHIFT          &none       &none  &kp RIGHT_COMMAND           &none           &none         &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp RSHFT
 &kp LEFT_CONTROL  &kp LALT  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp SPACE                           &mo 1       &kp LEFT_COMMAND  &mt RIGHT_COMMAND SPACE  &kp BACKSPACE  &kp RETURN  &kp RIGHT_COMMAND  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
            >;
        };

        layer_symbol {
            bindings = <
          &kp ESC           &kp N1            &kp N2            &kp N3            &kp N4             &kp N5            &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)         &kp N6     &kp KP_NUM     &kp KP_EQUAL      &kp KP_DIVIDE  &kp KP_MULTIPLY       &kp MINUS
          &kp TAB  &kp EXCLAMATION       &kp AT_SIGN          &kp HASH        &kp DOLLAR      &kp AMPERSAND                       &kp LG(V)              &kp LG(F)       &kp PLUS      &kp MINUS  &kp KP_MULTIPLY      &kp KP_DIVIDE      &kp PERCENT   &kp BACKSPACE
 &kp LEFT_CONTROL     &kp QUESTION          &kp PIPE         &kp CARET         &kp TILDE  &kp DOUBLE_QUOTES                       &kp LG(C)                  &mo 2          &mo 2                                              &mo 3            &mo 3       &kp LG(A)         &kp LESS_THAN       &kp GREATER_THAN         &kp EQUAL     &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp RETURN
        &kp LSHFT            &kp Z             &kp X    &kp UNDERSCORE         &kp GRAVE   &kp SINGLE_QUOTE                           &none                  &none          &mo 4          &none            &none      &kp LG(SPACE)            &none           &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp SLASH   &kp RSHFT
 &kp LEFT_CONTROL         &kp LALT  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp LEFT_COMMAND          &kp SPACE                          &trans       &kp LEFT_COMMAND  &kp LG(SPACE)  &kp BACKSPACE       &kp RETURN  &kp RIGHT_COMMAND   &kp LEFT_ARROW  &kp DOWN_ARROW          &kp UP_ARROW              &kp RIGHT
            >;
        };

        layer_number {
            bindings = <
        &kp ESC    &kp N1            &kp N2            &kp N3            &kp N4     &kp N5            &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)         &kp N6         &kp N7      &kp N8             &kp N9    &kp N0  &kp BACKSLASH
         &kp F1    &kp F2            &kp F3            &kp F4            &kp F5     &kp F6                       &kp LG(V)              &kp RG(F)         &kp F7         &kp F8      &kp F9            &kp F10   &kp F11        &kp F12
      &kp LCTRL    &kp N1            &kp N2            &kp N3            &kp N4     &kp N5                       &kp LG(C)                 &trans         &trans                                         &mo 3     &mo 3      &kp LG(A)  &kp N6     &kp N7     &kp N8  &kp NUMBER_9     &kp N0       &kp RETURN
 &kp LEFT_SHIFT     &kp Z             &kp X             &kp C             &kp V      &kp B                           &none                  &none          &mo 4          &none       &none      &kp LG(SPACE)     &none          &none   &kp N      &kp M  &kp COMMA    &kp PERIOD  &kp SLASH  &kp RIGHT_SHIFT
      &kp LCTRL  &kp LALT  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp SPACE                           &mo 1       &kp LEFT_COMMAND  &kp LG(SPACE)  &kp BACKSPACE  &kp RETURN  &kp RIGHT_COMMAND  &kp LEFT       &kp DOWN  &kp UP  &kp RIGHT
            >;
        };

        layer_Direction {
            bindings = <
        &kp ESC    &kp N1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4  &kp NUMBER_5            &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)   &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8       &kp NUMBER_9  &kp NUMBER_0  &kp BACKSLASH
        &kp TAB     &kp Q             &kp W             &kp E             &kp R         &kp T                       &kp LG(V)              &kp RG(F)          &kp Y          &kp U  &kp UP_ARROW              &kp O         &kp P  &kp BACKSPACE
      &kp LCTRL     &kp A             &kp S             &kp D             &kp F         &kp G                       &kp LG(C)                  &mo 2          &mo 2                                          &trans        &trans      &kp LG(A)   &kp H   &kp LEFT   &kp DOWN   &kp RIGHT  &kp SEMICOLON       &kp RETURN
 &kp LEFT_SHIFT     &kp Z             &kp X             &kp C             &kp V         &kp B                           &none                  &none          &mo 4          &none         &none      &kp LG(SPACE)         &none          &none   &kp N      &kp M  &kp COMMA  &kp PERIOD      &kp SLASH  &kp RIGHT_SHIFT
      &kp LCTRL  &kp LALT  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp LEFT_COMMAND     &kp SPACE                           &mo 1       &kp LEFT_COMMAND  &kp LG(SPACE)  &kp BACKSPACE    &kp RETURN  &kp RIGHT_COMMAND      &kp LEFT       &kp DOWN  &kp UP  &kp RIGHT
            >;
        };

        layer_CONFIG {
            bindings = <
      &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &bl BL_TOG         &rgb_ug RGB_TOG  &trans  &trans  &trans  &trans  &trans      &trans
      &trans        &trans        &trans        &trans        &trans        &trans            &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &trans  &trans  &trans  &trans  &trans      &trans
      &trans        &trans        &trans        &trans        &trans        &trans            &bl BL_INC                  &trans  &trans                  &trans  &trans  &bl BL_DEC  &trans       &trans  &trans  &trans  &trans  &trans
      &trans        &trans        &trans        &trans        &trans        &trans                &trans                  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans       &trans  &trans  &trans  &trans  &trans
 &bootloader        &trans        &trans        &trans        &trans        &trans                &trans                  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &bootloader
            >;
        };

    };
};
