
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESC    &kp N1            &kp N2            &kp N3            &kp N4  &kp N5            &kp LG(LEFT_BRACKET)                                                                         &kp RG(RIGHT_BRACKET)  &kp N6             &kp N7     &kp N8    &kp N9    &kp N0  &kp BACKSLASH
   &kp TAB     &kp Q             &kp W             &kp E             &kp R   &kp T                       &kp LG(A)                                                                                     &kp RG(F)   &kp Y              &kp U      &kp I     &kp O     &kp P       &kp BSLH
 &kp LCTRL     &kp A             &kp S             &kp D             &kp F   &kp G                &kp LEFT_COMMAND   &mo 2             &mo 2                              &mo 3     &mo 3      &kp RIGHT_COMMAND   &kp H              &kp J      &kp K     &kp L  &kp SEMI      &kp ENTER
 &kp LSHFT     &kp Z             &kp X             &kp C             &kp V   &kp B                                                 &kp LCTRL                  &kp RIGHT_COMMAND                                    &kp N              &kp M  &kp COMMA   &kp DOT  &kp FSLH      &kp RSHFT
 &kp LCTRL  &kp LALT  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp LEFT_COMMAND                               &kp SPACE   &mo 1  &kp LEFT_COMMAND                      &kp RG(SPACE)  &kp BSPC              &kp ENTER          &kp RIGHT_COMMAND   &kp LEFT  &kp DOWN    &kp UP      &kp RIGHT
            >;
        };

        layer_SYMBOL {
            bindings = <
   &kp ESC        &kp N1            &kp N2            &kp N3     &kp N4             &kp N5            &kp LG(LEFT_BRACKET)                                                                         &kp RG(RIGHT_BRACKET)                &kp N6             &kp KP_NUM      &kp KP_EQUAL      &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp EXCL            &kp AT          &kp HASH   &kp DLLR           &kp AMPS                       &kp LG(A)                                                                                     &kp RG(F)              &kp PLUS              &kp MINUS   &kp KP_MULTIPLY       &kp KP_SLASH        &kp PRCNT   &kp BSPC
 &kp LCTRL  &kp QUESTION          &kp PIPE         &kp CARET  &kp TILDE  &kp DOUBLE_QUOTES                &kp LEFT_COMMAND   &mo 2             &mo 2                              &mo 3     &mo 3      &kp RIGHT_COMMAND                &kp LT       &kp GREATER_THAN         &kp EQUAL     &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp ENTER
 &kp LSHFT         &kp Z             &kp X         &kp UNDER  &kp GRAVE   &kp SINGLE_QUOTE                                                     &mo 4                  &kp RIGHT_COMMAND                                   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp SLASH  &kp RSHFT
 &kp LCTRL      &kp LALT  &kp LEFT_COMMAND  &kp LEFT_COMMAND   &kp LCMD                                          &kp SPACE  &trans  &kp LEFT_COMMAND                      &kp RG(SPACE)  &kp BSPC              &kp ENTER                            &kp RIGHT_COMMAND          &kp LEFT           &kp DOWN           &kp UP  &kp RIGHT
            >;
        };

        layer_NUMBER {
            bindings = <
   &kp ESC  &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4  &kp NUMBER_5            &kp LG(LEFT_BRACKET)                                                                         &kp RG(RIGHT_BRACKET)  &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp BACKSLASH
    &kp F1        &kp F2            &kp F3            &kp F4            &kp F5        &kp F6                       &kp LG(A)                                                                                     &kp RG(F)        &kp F7             &kp F8        &kp F9       &kp F10       &kp F11        &kp F12
 &kp LCTRL  &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4  &kp NUMBER_5                &kp LEFT_COMMAND  &trans            &trans                              &mo 3     &mo 3      &kp RIGHT_COMMAND  &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0      &kp ENTER
 &kp LSHFT         &kp Z             &kp X             &kp C             &kp V         &kp B                                                     &mo 4                  &kp RIGHT_COMMAND                                          &kp N              &kp M     &kp COMMA       &kp DOT     &kp SLASH     &kp LSHIFT
 &kp LCTRL      &kp LALT  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp LEFT_COMMAND                                     &kp SPACE   &mo 1  &kp LEFT_COMMAND                      &kp RG(SPACE)  &kp BSPC              &kp ENTER                &kp RIGHT_COMMAND      &kp LEFT      &kp DOWN        &kp UP      &kp RIGHT
            >;
        };

        layer_Direction {
            bindings = <
   &kp ESC  &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4  &kp NUMBER_5            &kp LG(LEFT_BRACKET)                                                                         &kp RG(RIGHT_BRACKET)  &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp NUMBER_0  &kp BACKSLASH
   &kp TAB         &kp Q             &kp W             &kp E             &kp R         &kp T                       &kp LG(A)                                                                                     &kp RG(F)         &kp Y              &kp U        &kp UP         &kp O          &kp P       &kp BSPC
 &kp LCTRL         &kp A             &kp S             &kp D             &kp F         &kp G                &kp LEFT_COMMAND   &mo 2             &mo 2                             &trans    &trans      &kp RIGHT_COMMAND         &kp H           &kp LEFT      &kp DOWN     &kp RIGHT  &kp SEMICOLON      &kp ENTER
 &kp LSHFT         &kp Z             &kp X             &kp C             &kp V         &kp B                                                     &mo 4                  &kp RIGHT_COMMAND                                          &kp N              &kp M     &kp COMMA       &kp DOT      &kp SLASH      &kp RSHFT
 &kp LCTRL      &kp LALT  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp LEFT_COMMAND                                     &kp SPACE   &mo 1  &kp LEFT_COMMAND                      &kp RG(SPACE)  &kp BSPC              &kp ENTER                &kp RIGHT_COMMAND      &kp LEFT      &kp DOWN         &kp UP      &kp RIGHT
            >;
        };

        layer_CONFIG {
            bindings = <
      &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &bl BL_TOG                                                         &rgb_ug RGB_TOG  &trans  &trans  &trans  &trans  &trans       &trans
      &trans        &trans        &trans        &trans        &trans        &trans            &bt BT_CLR                                                  &rgb_ug RGB_MEFS_CMD 5  &trans  &trans  &trans  &trans  &trans       &trans
      &trans        &trans        &trans        &trans        &trans        &trans            &bl BL_INC  &trans  &trans                  &trans  &trans              &bl BL_DEC  &trans  &trans  &trans  &trans  &trans       &trans
      &trans        &trans        &trans        &trans        &trans        &trans                                &trans                  &trans                                  &trans  &trans  &trans  &trans  &trans       &trans
 &bootloader        &trans        &trans        &trans        &trans                              &trans  &trans  &trans                  &trans  &trans                  &trans          &trans  &trans  &trans  &trans  &bootloader
            >;
        };

    };
};
